<Window x:Class="ResourceAZ.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ResourceAZ"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:inf="clr-namespace:ResourceAZ.Infrastructure"
        xmlns:vm="clr-namespace:ResourceAZ.ViewModels"
        mc:Ignorable="d"
        Title="{Binding FileName}" Height="897.5" Width="1500" WindowStartupLocation="CenterScreen" Background="#FFE6E6E6">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding CommandLoaded}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Window.Resources>
       
        
        <inf:RowToBrushConverter x:Key="RowToBrushConverter"/>

        <Style TargetType="DataGridCell" x:Key="CellRight">
            <Style.Setters>
                <Setter Property="TextBlock.TextAlignment" Value="Right" />
            </Style.Setters>
            <Style.Triggers>
                <DataTrigger Binding="{Binding SetColor}" Value="True">
                    <Setter Property="Background" Value="{Binding date, Converter={StaticResource RowToBrushConverter}}"/>
                </DataTrigger>
                <Trigger Property="DataGridCell.IsSelected" Value="True">
                    <Setter Property="Background" Value="CornflowerBlue"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="BorderBrush" Value="Gray"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style TargetType="{x:Type ToggleButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background)" Storyboard.TargetName="border">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <SolidColorBrush Color="#FF94B6FD"/>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked"/>
                                    <VisualState x:Name="Indeterminate"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                                <Setter Property="OpacityMask" TargetName="contentPresenter">
                                    <Setter.Value>
                                        <SolidColorBrush Color="Black" Opacity="0.35"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        
        <Style TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Pressed"/>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.OpacityMask)" Storyboard.TargetName="contentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <SolidColorBrush Color="Black" Opacity="0.28"/>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Window.DataContext>
        <vm:MainWindowViewModel/>
    </Window.DataContext>
    <DockPanel Margin="0,11,0,0">
        <!--<TextBlock HorizontalAlignment="Center" Margin="0,12" Text="{Binding FileName}" VerticalAlignment="Top" FontWeight="Bold" DockPanel.Dock="Top" FontSize="16"/>-->
        <StatusBar Height="32" VerticalAlignment="Bottom" DockPanel.Dock="Bottom">
            <TextBlock Text="{Binding listMeasure.Count, StringFormat=Число измерений: \{0\}}" HorizontalAlignment="Left"/>
            <TextBlock Text="{Binding KoeffFunc, StringFormat=Функция линии коэффициентов: \{0\}}" HorizontalAlignment="Left" Margin="23,0,0,0" Visibility="Collapsed"/>

            <TextBlock Text="{Binding MinSelectedValue, StringFormat=Минимальная дата: dd.MM.yyyy}" HorizontalAlignment="Left" Margin="23,0,0,0"/>
            <TextBlock Text="{Binding MaxSelectedValue, StringFormat=Максимальная дата: dd.MM.yyyy}" HorizontalAlignment="Left" Margin="23,0,0,0"/>
            <TextBlock Text="{Binding ResistFunc, StringFormat=Функция линии сопротивления: \{0\}}" HorizontalAlignment="Left" Margin="23,0,0,0"/>
        </StatusBar>
        <Grid Margin="0" Width="422">
            <Grid.RowDefinitions>
                <RowDefinition Height="127"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <GroupBox Header="Манипуляции со списком" Margin="10,0,4,0" Background="#FFE8E8E8">
                <GroupBox.Effect>
                    <DropShadowEffect Color="#FFC5C5C5" ShadowDepth="2" BlurRadius="20"/>
                </GroupBox.Effect>
                <Grid Margin="0">
                    <RadioButton Content="Среднее по дням" Command="{Binding GroupByCommand}" CommandParameter="{x:Static vm:KindGroup.DAY}" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" IsChecked="{Binding GroupDay}"/>
                    <RadioButton Content="Среднее по месяцам" Command="{Binding GroupByCommand}" CommandParameter="{x:Static vm:KindGroup.MONTH}" HorizontalAlignment="Left" Margin="10,30,0,0" VerticalAlignment="Top" IsChecked="{Binding GroupMonth}"/>
                    <RadioButton Content="Среднее по годам" Command="{Binding GroupByCommand}" CommandParameter="{x:Static vm:KindGroup.YEAR}" HorizontalAlignment="Left" Margin="10,50,0,0" VerticalAlignment="Top" IsChecked="{Binding GroupYear}"/>
                    <RadioButton Content="Все измерения" Command="{Binding GroupByCommand}" CommandParameter="{x:Static vm:KindGroup.NONE}" HorizontalAlignment="Left" Margin="10,71,0,0" VerticalAlignment="Top" IsChecked="{Binding GroupNone}"/>
                    <Button Margin="238,66,10,16" Command="{Binding RemoveDeviationCommand}" Content="Удалить отклонения"/>
                </Grid>
            </GroupBox>
            <GroupBox Header="Измеренные показания" Margin="10,0,4,0" Background="#FFE8E8E8" Grid.Row="1">
                <GroupBox.Effect>
                    <DropShadowEffect Color="#FFC5C5C5" ShadowDepth="2" BlurRadius="20"/>
                </GroupBox.Effect>
                <local:DataGridSelected x:Name="dg" Margin="0,0,8,8" AutoGenerateColumns="false" IsReadOnly="True"
                    ItemsSource="{Binding listMeasure}" 
                    HorizontalGridLinesBrush="#FFD8D8D8" VerticalGridLinesBrush="#FFD8D8D8" AlternatingRowBackground="#FFE4E4E4" 
                    CanUserAddRows="False" CanUserDeleteRows="False" 
                    SelectedItemsList="{Binding SelectedMeasure, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                    <local:DataGridSelected.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Удалить строку" Command="{Binding DeleteLineCommand}" 
                                CommandParameter="{Binding SelectedIndex, ElementName=dg, Mode=OneWayToSource}"/>
                        </ContextMenu>
                    </local:DataGridSelected.ContextMenu>
                    <local:DataGridSelected.Columns>
                        <DataGridTextColumn Header="Дата" Binding="{Binding date, StringFormat=dd.MM.yyyy HH:mm}" />
                        <DataGridTextColumn Header="Вых.Ток" Binding="{Binding Current, StringFormat=F2}" CellStyle="{StaticResource CellRight}"/>
                        <DataGridTextColumn Header="Напряж" Binding="{Binding Napr, StringFormat=F2}" CellStyle="{StaticResource CellRight}"/>
                        <DataGridTextColumn Header="Потенц." Binding="{Binding SummPot, StringFormat=F2}" CellStyle="{StaticResource CellRight}"/>
                        <DataGridTextColumn Header="Коэфф." Binding="{Binding Koeff, StringFormat=F3}" CellStyle="{StaticResource CellRight}"/>
                        <DataGridTextColumn Header="Сопр." Binding="{Binding Resist, StringFormat=F2}" CellStyle="{StaticResource CellRight}"/>
                    </local:DataGridSelected.Columns>
                    <!--<local:DataGridSelected.Resources>
                        <inf:RowToBrushConverter x:Key="RowToBrushConverter"/>
                    </local:DataGridSelected.Resources>-->
                    <!--<local:DataGridSelected.RowStyle>
                        <Style TargetType="DataGridRow">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SetColor}" Value="True">
                                    <Setter Property="Background" Value="{Binding date, Converter={StaticResource RowToBrushConverter}}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </local:DataGridSelected.RowStyle>-->

                    <local:DataGridSelected.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SetColor}" Value="True">
                                    <Setter Property="Background" Value="{Binding date, Converter={StaticResource RowToBrushConverter}}"/>
                                </DataTrigger>
                                <Trigger Property="DataGridCell.IsSelected" Value="True">
                                    <Setter Property="Background" Value="CornflowerBlue"/>
                                    <Setter Property="Foreground" Value="White"/>
                                    <Setter Property="BorderBrush" Value="Gray"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </local:DataGridSelected.CellStyle>
                    <!--<local:DataGridSelected.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding date}" Value="">
                                    <Setter Property="Background" Value="#51FFF300"/>
                                    <Setter Property="Foreground" Value="Black"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </local:DataGridSelected.CellStyle>-->

                </local:DataGridSelected>
            </GroupBox>
        </Grid>
        <Grid Margin="0" DockPanel.Dock="Right">
            <Grid.RowDefinitions>
                <RowDefinition Height="40*"/>
                <RowDefinition Height="157*"/>
            </Grid.RowDefinitions>
            <GroupBox Header="Параметры расчета" VerticalAlignment="Top" Height="264" Background="#FFE8E8E8" Margin="10,0,10,0" Grid.RowSpan="2">
                <GroupBox.Effect>
                    <DropShadowEffect Color="#FFC5C5C5" ShadowDepth="2" BlurRadius="20"/>
                </GroupBox.Effect>
                <Grid>
                    <TextBlock HorizontalAlignment="Left" Margin="10,10,0,0" TextWrapping="Wrap" Text="Минимальный потенциал" VerticalAlignment="Top"/>
                    <TextBox Margin="172,9,-0.7,0" Text="{Binding MinPotCalc}" HorizontalAlignment="Left" VerticalAlignment="Top" Width="40" Height="18"/>
                    <TextBlock HorizontalAlignment="Left" Margin="10,33,0,0" TextWrapping="Wrap" Text="Максимальный ток СКЗ" VerticalAlignment="Top"/>
                    <TextBox Margin="172,32,0,0" Text="{Binding MaxCurrentSKZ}" HorizontalAlignment="Left" VerticalAlignment="Top" Width="40" Height="18"/>
                    <TextBlock HorizontalAlignment="Left" Margin="10,56,0,0" TextWrapping="Wrap" Text="Макс. напряжение СКЗ" VerticalAlignment="Top"/>
                    <TextBox Margin="172,55,0,0" Text="{Binding MaxNaprSKZ}" HorizontalAlignment="Left" VerticalAlignment="Top" Width="40" Height="18"/>
                    <RadioButton Content="Расчет по сопротивлению" HorizontalAlignment="Left" Margin="10,151,0,0" VerticalAlignment="Top" IsChecked="{Binding CalcResist}"/>
                    <RadioButton Content="Расчет по потенциалам" HorizontalAlignment="Left" Margin="10,128,0,0" VerticalAlignment="Top" IsChecked="{Binding CalcPotencial}"/>
                    <TextBlock HorizontalAlignment="Left" Margin="10,79,0,0" TextWrapping="Wrap" Text="Степень для расчета" VerticalAlignment="Top"/>
                    <TextBox Margin="172,78,0,0" VerticalAlignment="Top" Text="{Binding orderCalc}"/>
                    <TextBlock HorizontalAlignment="Left" Margin="31,171,0,0" TextWrapping="Wrap" Text="Ток для расчета" VerticalAlignment="Top"/>
                    <TextBox Margin="172,171,0,0" VerticalAlignment="Top" Text="{Binding AvgCurrent, FallbackValue=null, StringFormat=F1, TargetNullValue=''}"/>
                </Grid>
            </GroupBox>
            <GroupBox Margin="10,120,10,0" Background="#FFE6E6E6" Grid.Row="1">
                <GroupBox.Effect>
                    <DropShadowEffect Color="#FFC5C5C5" ShadowDepth="2" BlurRadius="20"/>
                </GroupBox.Effect>
                <Grid Margin="0">
                    <Button HorizontalAlignment="Center" Width="160" Margin="0,19,0,0" Command="{Binding FromExcelCommand}" Height="60" VerticalAlignment="Top">
                        <StackPanel Orientation="Horizontal" RenderTransformOrigin="0.5,0.5">
                            <Image Source="/ResourceAZ;component/Resources/Images/excel_imports.png" Stretch="None" Height="32" Margin="5"/>
                            <TextBlock Text="Открыть Excel" TextWrapping="Wrap" TextAlignment="Center" VerticalAlignment="Center" Margin="5"/>
                        </StackPanel>
                    </Button>
                    <Button HorizontalAlignment="Center" VerticalAlignment="Top" Width="160" Height="60" Command="{Binding CloseApplicationCommand}" Margin="0,178,0,0">
                        <StackPanel Orientation="Horizontal" >
                            <Image Source="/ResourceAZ;component/Resources/Images/door.png" Width="32" Height="32" Margin="5"/>
                            <TextBlock Margin="5" Text="Закрыть программу" TextWrapping="Wrap" TextAlignment="Center" VerticalAlignment="Center" Width="79"/>
                        </StackPanel>
                    </Button>
                    <Button HorizontalAlignment="Center" Margin="26,96,26,0" VerticalAlignment="Top" Width="160" Height="60" Command="{Binding CalculateCommand}">
                        <StackPanel Orientation="Horizontal" Width="127" >
                            <Image Source="/ResourceAZ;component/Resources/Images/calc.png" Width="32" Height="32" Margin="5"/>
                            <TextBlock Margin="5" Text="Рассчитать" TextAlignment="Center" VerticalAlignment="Center" Width="73"/>
                        </StackPanel>
                    </Button>
                </Grid>
            </GroupBox>
        </Grid>
        <Grid Margin="0,0,4,1">
            <Grid.RowDefinitions>
                <RowDefinition Height="32"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <!--IsChecked="{Binding SetSelectedRange, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"-->
            <ToolBarPanel Margin="5,0,0,0" Orientation="Horizontal" >
                <ToggleButton Command="{Binding SetRangeForCalcCommand}" ToolTip="Задать диапазон" Margin="5,0,0,0" Width="48"
                              IsChecked="{Binding SetSelectedRange, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                              >
                    <Image Source="/ResourceAZ;component/Resources/Images/table_select_column.png"/>
                </ToggleButton>
                <Button Command="{Binding RemoveSelectedValuesCommand}" ToolTip="Удалить данные в диапазоне" Margin="5,0,0,0" Width="48">
                    <Image Source="/ResourceAZ;component/Resources/Images/Cancel.png"/>
                </Button>
                <Button Command="{Binding CalcApproxCommand}" Margin="5,0,0,0" Width="48" ToolTip="Пересчитать линии усреднения">
                    <Image Source="/ResourceAZ;component/Resources/Images/chart_curve.png"/>
                </Button>
            </ToolBarPanel>
            <WpfPlot x:Name="PlotCurrent" BorderBrush="Black" IsTabStop="False" Focusable="False" IsManipulationEnabled="True" Margin="5,5" Grid.Column="1" Grid.Row="1">
                <WpfPlot.Effect>
                    <DropShadowEffect Color="Gainsboro" ShadowDepth="1" BlurRadius="30"/>
                </WpfPlot.Effect>
            </WpfPlot>
            <WpfPlot x:Name="PlotNapr" Margin="5,5" BorderBrush="Black" IsTabStop="False" Focusable="False" IsManipulationEnabled="False" Grid.Row="2" Grid.Column="1">
                <WpfPlot.Effect>
                    <DropShadowEffect Color="Gainsboro" ShadowDepth="1" BlurRadius="30"/>
                </WpfPlot.Effect>
            </WpfPlot>
            <WpfPlot x:Name="PlotPot" Margin="5,5" BorderBrush="Black" IsTabStop="False" Focusable="False" IsManipulationEnabled="False" Grid.Row="3" Grid.Column="1">
                <WpfPlot.Effect>
                    <DropShadowEffect Color="Gainsboro" ShadowDepth="1" BlurRadius="30"/>
                </WpfPlot.Effect>
            </WpfPlot>
            <WpfPlot x:Name="PlotKoeff" Margin="5,5" BorderBrush="Black" IsTabStop="False" Focusable="False" IsManipulationEnabled="False" Grid.Row="4" Grid.Column="1">
                <WpfPlot.Effect>
                    <DropShadowEffect Color="Gainsboro" ShadowDepth="1" BlurRadius="30"/>
                </WpfPlot.Effect>
            </WpfPlot>
            <WpfPlot x:Name="PlotResist" Margin="5,5,5,0" BorderBrush="Black" IsTabStop="False" Focusable="False" IsManipulationEnabled="False" Grid.Row="5" Grid.Column="1">
                <WpfPlot.Effect>
                    <DropShadowEffect Color="Gainsboro" ShadowDepth="1" BlurRadius="30"/>
                </WpfPlot.Effect>
            </WpfPlot>
        </Grid>
    </DockPanel>
</Window>
